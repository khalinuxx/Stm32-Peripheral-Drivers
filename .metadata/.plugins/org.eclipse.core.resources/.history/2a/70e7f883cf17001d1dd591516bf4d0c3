
/**
  ******************************************************************************
  * @file    main.c
  * @author  Khalil Mansouri & Mouadh Dahech
  * @brief   main file of Reading Values from Temp sensor using ADC Driver .
  * Created on: 1 Aug. 2022
  ******************************************************************************
  * @attention
  *
  * Copyright NOTICE: (c) 2022 ACTIA Engineering Services, R&D Team.
  * All rights reserved.
  ******************************************************************************
  */
/* Define to prevent recursive inclusion -------------------------------------*/
#include"ADC.h"
#include"stm32f4xx_ll_system.h"

void EXTI_Line_Init(void);

#define Avg_Slope .0025   // V/C
#define V25  0.76   // V
#define VSENSE 3.3/4096  // 12 bit res

uint32_t temp;
float val ;
int main()
{

	LL_AHB1_GRP1_EnableClock( LL_AHB1_GRP1_PERIPH_GPIOD); // GPIOA Clock Enable
	LL_GPIO_SetPinMode(GPIOD,LL_GPIO_PIN_15,LL_GPIO_MODE_OUTPUT);
	LL_AHB1_GRP1_EnableClock( LL_AHB1_GRP1_PERIPH_GPIOA);
	LL_GPIO_SetPinMode(GPIOA,LL_GPIO_PIN_0,LL_GPIO_MODE_INPUT);

	//ADC_GPIO_Init(GPIOA,LL_GPIO_PIN_1); //Channel PIN Initializing
	LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);// ADC Clock Enable
	ADC_Init(ADC1);// ADC Initializing
	ADC_REG_Init(ADC1);// ADC Regular Group Initializing
	ADC_Com_Init(ADC1);// ADC commun Parameters Initializing
	ADC_Channel_Init(ADC1,LL_ADC_REG_RANK_1,LL_ADC_CHANNEL_TEMPSENSOR);//ADC Channel Initializing
	LL_ADC_Enable(ADC1); //ADC Enabling
	EXTI_Line_Init();
	ADC_IRQ_Init(0);
 	while(1)
	{

		//LL_ADC_REG_StartConversionSWStart(ADC1);

		/*temp=ADC_Read(ADC1);
		val =  ((VSENSE*temp ) / Avg_Slope) + 25;
		for(int itr=0;itr<90000;itr++){}*/

	}
}

/*
static void callback(ADC_TypeDef *ADCx)
{



		while(!LL_ADC_IsActiveFlag_EOCS(ADCx)){}

		temp= LL_ADC_REG_ReadConversionData32(ADCx);
		LL_ADC_ClearFlag_EOCS(ADCx);
		LL_GPIO_TogglePin(GPIOD,LL_GPIO_PIN_15);
		for(int itr=0;itr<90000;itr++){}



}
*/

void EXTI_Line_Init(void)
{


	/*LL_EXTI_LINE_0=LL_GPIO_PIN_0 ****
	 *     ........ = .........
	 *  .........................
	 * LL_EXTI_LINE_15=LL_GPIO_PIN_15
	 */

	LL_APB2_GRP1_EnableClock (LL_APB2_GRP1_PERIPH_SYSCFG);
	LL_SYSCFG_SetEXTISource(LL_SYSCFG_EXTI_PORTA, LL_SYSCFG_EXTI_LINE0);
	LL_EXTI_EnableIT_0_31 (LL_GPIO_PIN_0);
	LL_EXTI_EnableFallingTrig_0_31(LL_GPIO_PIN_0);
	NVIC_EnableIRQ(EXTI0_IRQn);
	NVIC_SetPriority(EXTI0_IRQn,0);
}


void EXTI0_IRQHandler(void)
{
if (LL_EXTI_IsActiveFlag_0_31(LL_GPIO_PIN_0)!= RESET)
{
	//Interrupt Actions Begin
	LL_ADC_REG_StartConversionSWStart(ADC1);

    //Interrupt Actions End

	LL_EXTI_ClearFlag_0_31(LL_GPIO_PIN_0);
}

}


void ADC_IRQHandler(void)
{
	if(LL_ADC_IsActiveFlag_OVR(ADC1)!=0)
	{

	} else {

		LL_ADC_ClearFlag_EOCS(ADC1);

		temp= LL_ADC_REG_ReadConversionData32(ADC1);

		LL_GPIO_TogglePin(GPIOD,LL_GPIO_PIN_15);
		for(int itr=0;itr<90000;itr++){}

	}
	LL_GPIO_TogglePin(GPIOD,LL_GPIO_PIN_15);
}



